version: 0.2
env:
  parameter-store:
    WEBHOOK_URL: "SLACK_WEBHOOK_URL"
phases:
  install:
    runtime-versions:
      java: corretto11
    commands:
      - echo Installing app dependencies...
      - curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.25.7/2023-03-17/bin/windows/amd64/kubectl
      - chmod +x ./kubectl
      - echo 'Check kubectl version'
      - kubectl version --short --client

  pre_build:
    commands:
      - echo Logging in to Amazon EKS...
      - aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name $AWS_CLUSTER_NAME
      - echo check config
      - kubectl config view --minify
      - echo check kubectl access
      - kubectl get svc
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME/service-registry
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - docker pull $REPOSITORY_URI:$IMAGE_TAG

  post_build:
    commands:
      - status=$(kubectl apply -f deploy/deployment.yaml)
      - echo $status
      - kubectl apply -f deploy/service.yaml
      - chmod +x notifications.sh
      - ./notifications.sh
